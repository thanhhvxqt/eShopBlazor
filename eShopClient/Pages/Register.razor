@page "/register"
@using System.Web;
@using System.Net;
@using System.ComponentModel.DataAnnotations;
@using Newtonsoft.Json
@using eShopShare.Models.ApiModels
@layout WebLayout;
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISyncSessionStorageService sessionStorage
@inject Microsoft.Extensions.Configuration.IConfiguration config;
@inject IJSRuntime JSRuntime
@inject IOnChangeService _OCSvc
@inject IToastService _toastSvc;

<section class="signup_area section--padding2">
    <div class="container">
        <div class="quangcao">
            <div class="d-none d-md-block">
                <div class="optad_728x90_0">
                    <div id="oa-360-1659637915146_w7bnjkia0" style="visibility: hidden;"><div id="oa-360-1659637915146_qfj5fjbez" style="position: relative; display: inline-block;"><div id="oa-360-1659637915147_uyweezo38" style="display: none;"></div><div id="oa-360-1659637915148_2mor0dqg1" style="display: none;"></div></div></div>
                </div>
            </div>
            <div class="d-block d-md-none">
                <div class="optad_300x250_0">
                    <div id="oa-360-1659637915152_xpmzffvan" style="visibility: hidden;"><div id="oa-360-1659637915152_aspsfobjg" style="position: relative; display: inline-block;"><div id="oa-360-1659637915153_ihsf1l4pn" style="display: none;"></div><div id="oa-360-1659637915153_naako8utj" style="display: none;"></div></div></div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 offset-lg-3" style="margin-bottom: 30px;">
                <EditForm id="formdangky" OnValidSubmit="DangKy" Model="model">
                    <input name="__RequestVerificationToken" type="hidden" value="qz6umO-dQ8azUpImx38JmfUWj0vqVvltUjQ1MtOtV5ut4_yjDClrRGK4WxRCZc6AALSsi6ib9QPpXi_G50Aqd1cOBNG4wCjT4hPjZzq8K9o1">
                    <div class="cardify signup_form">
                        <div class="login--header">
                            <h3>Tạo tài khoản</h3>
                            <p>
                                Hãy điền đầy đủ thông tin bên dưới để đăng ký tài khoản thành viên 
                            </p>
                            
                        </div>
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="login--form">
                            <div class="form-group">
                                <label for="hotentxt">Tên của bạn:</label>
                                <InputText @bind-Value="model.Name" id="hotentxt" type="text" class="text_field" placeholder="Nhập tên của bạn" name="hoten" autocomplete="off" required="" autofocus=""></InputText>
                                <span id="hotenerrortxt" class="text-danger" style="color: red; float: right; margin-bottom: 20px; display: block;">Tối thiểu 3 ký tự và tối đa 50 ký tự</span>
                            </div>
                            <div class="form-group">
                                <label for="emailtxt">Email:</label>
                                <InputText @bind-Value="model.Email" id="emailtxt" type="email" class="text_field" placeholder="Nhập email của bạn" name="email" autocomplete="off" required=""></InputText>
                                <span id="emailerrortxt" class="text-danger" style="color: red; float: right; margin-bottom: 20px; display: none;"></span>
                            </div>
                            @*<div class="form-group">
                                <label for="usernametxt">Tên đăng nhập:</label>
                                <input id="usernametxt" type="text" class="text_field" placeholder="Nhập tên đăng nhập" name="username" autocomplete="off" required="">
                                <span id="usernameerrortxt" class="text-danger" style="color: red; float: right; margin-bottom: 20px; display: none;"></span>
                            </div>*@
                            <div class="form-group">
                                <label for="passtxt">Mật khẩu:</label>
                                <InputText @bind-Value="model.Password" id="passtxt" type="password" class="text_field" placeholder="Nhập mật khẩu" name="pass" required=""></InputText>
                                <span id="passerrortxt" class="text-danger" style="color:red; float:right; margin-bottom:20px"></span>
                            </div>
                            <div class="form-group">
                                <label for="repasstxt">Nhập lại mật khẩu</label>
                                <InputText @bind-Value="model.ConfirmPassword" id="repasstxt" type="password" class="text_field" placeholder="Nhập lại mật khẩu" name="repass" required=""></InputText>
                                <span id="repasserrortxt" class="text-danger" style="color: red; float: right; margin-bottom: 20px; display: none;"></span>
                            </div>
                            <br>
                            <button class="btn btn--xs register_btn" type="submit">Đăng ký</button>
                            <div class="login_assist">
                                <p>
                                    Bạn đã có tài khoản thành viên ?
                                    <a href="/login">Đăng nhập</a>
                                </p>
                                @*<p><a href="thread/khong-nhan-duoc-email-kich-hoat-hoac-email-khoi-phuc-tai-khoan-thi-phai-lam-gi-2858.html">Bạn không nhận được mail ?</a></p>*@
                            </div>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
        <div class="quangcao">
            <div class="d-none d-md-block">
                <div class="optad_728x90_1">
                    <div id="oa-360-1659637915149_osw72g8w5" style="visibility: hidden;"><div id="oa-360-1659637915149_oppbgt8t6" style="position: relative; display: inline-block;"><div id="oa-360-1659637915150_6vbeiqd6o" style="display: none;"></div><div id="oa-360-1659637915150_orodsyxjr" style="display: none;"></div></div></div>
                </div>
            </div>
            <div class="d-block d-md-none">
                <div class="optad_300x250_1">
                    <div id="oa-360-1659637915154_zkea44pin" style="visibility: hidden;"><div id="oa-360-1659637915154_drfz60cdf" style="position: relative; display: inline-block;"><div id="oa-360-1659637915154_2ztj02aq4" style="display: none;"></div><div id="oa-360-1659637915154_dk82ncw64" style="display: none;"></div></div></div>
                </div>
            </div>
        </div>
    </div>
</section>
@code {
    public RegisterClientRequest model { get; set; } = new RegisterClientRequest();

    private string error;

    //public string confirmPassword = "";
    protected override async Task OnInitializedAsync()
    {

    }
    public async void DangKy()
    {
        var apiUrl = config.GetSection("API")["APIUrl"].ToString();
        //imgUrl = config.GetSection("API")["ImgUrl"].ToString();
        var accessToken = sessionStorage.GetItem<string>("AccessToken");
        var khachhangId = sessionStorage.GetItem<string>("KhachhangId");

        //giohang.khachHangId = khachhangId;
        RegisterClientRequest clientRequest = new RegisterClientRequest() { Name = model.Name, Email = model.Email, Password = model.Password, ConfirmPassword = model.ConfirmPassword };

        using (var client = new HttpClient())
        {
            client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);
            StringContent content = new StringContent(JsonConvert.SerializeObject(clientRequest), System.Text.Encoding.UTF8, "application/json");
            client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
            HttpResponseMessage response = await client.PostAsync(apiUrl + "User/dangky", content);

            if (response.StatusCode != HttpStatusCode.OK)
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                error += (error == "" ? "" : "<br/>") + $" - {apiResponse}";
                //xu ly loi
                //return Content(response.ToString());
            }
            else
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                if (apiResponse == "-1")
                {

                }
                else // luu thanh cong
                {
                    //sessionStorage.RemoveItem("cart");
                    //await JSRuntime.InvokeAsync<object>("clearCart", "");
                    _toastSvc.ShowSuccess($"Đăng ký thành công {clientRequest.Email}");
                    NavigationManager.NavigateTo("/login");

                }
            }
        }
    }

}
