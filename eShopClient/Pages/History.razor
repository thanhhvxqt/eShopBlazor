@page "/History"
@using System.Net;
@*@using ASM.Share.Models;*@
@using System.Text.Json;
@using System.Text.Json.Serialization;
@using System.Security.Claims

@inject Blazored.SessionStorage.ISyncSessionStorageService sessionStorage
@inject Microsoft.Extensions.Configuration.IConfiguration config;
@inject NavigationManager NavigationManager
@layout WebLayout;

<h1>Danh sách đơn hàng</h1>
<table class="table">
    <thead>
        <tr>
            <th>
                Khách hàng
            </th>
            <th>
                Ngày đặt
            </th>
            <th>
                Tổng tiền
            </th>
            <th>
                Trạng thái
            </th>
            <th>
                Ghi chú
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        <AuthorizeView>
            <Authorized>
                @if (donHangs == null || donHangs.Count <= 0)
                {
                    <LoadingIndicator></LoadingIndicator>
                }
                else
                {
                    @foreach (var item in donHangs)
                    {
                        <tr>
                            <td>
                                @item.KhachHang.Email
                            </td>
                            <td>
                                @item.NgayDat.ToString("dd/MM/yyyy")
                            </td>
                            <td>
                                @item.Tongtien
                            </td>
                            <td>
                                <eShopClient.Shared.Label.OrderStatusLabel trangThaiDonHang="@item.TrangthaiDonhang">

                                </eShopClient.Shared.Label.OrderStatusLabel>
                            </td>
                            <td>
                                @item.Ghichu
                            </td>
                            <td>
                                @*<a asp-action="Edit" asp-route-id="@item.DonhangID">Edit</a> |*@
                                <a href="/history-detail/@item.DonHangID">Chi tiết</a>
                            </td>
                        </tr>

                    }
                }
            </Authorized>
            <NotAuthorized>
                <tr>
                    <td>
                        <a href="/login">Đăng nhập để xem lịch sử</a>
                    </td>
                </tr>
            </NotAuthorized>
        </AuthorizeView>
    </tbody>
</table>
<div>
    @*<a asp-action="Edit" asp-route-id="@Model.DonhangID">Edit</a> |*@
    <a href="/">Trang chủ</a>
</div>


@code {
    private string emailAddress;
    List<DonHang> donHangs = null;
    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }
    //public PostCartModel giohang;
    //private double total = 0;
    //protected string imgUrl = "";
    //protected string temp = "";
    public async Task<string> GetTypeOfClaim(string type)
    {
        var user = (await AuthStat).User;
        return user.Claims.FirstOrDefault(x => x.Type == type).Value.ToString();
    }
    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthStat).User;
        donHangs = new List<DonHang>();
        string khachhangId = await GetTypeOfClaim("khachid");
        var accessToken = await GetTypeOfClaim("token");
        var apiUrl = config.GetSection("API")["APIUrl"].ToString();
        //imgUrl = config.GetSection("API")["ImgUrl"].ToString();
        Console.WriteLine(accessToken);
        using (var client = new HttpClient())
        {

            //Dictionary<string, string> query = new Dictionary<string, string>();
            client.DefaultRequestHeaders.Authorization = new
                    System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);
            client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
            client.BaseAddress = new Uri(apiUrl);

            using (var response = await client.GetAsync("DonHang/" + khachhangId))
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                donHangs = Newtonsoft.Json.JsonConvert.DeserializeObject<List<DonHang>>(apiResponse);
                donHangs = donHangs.OrderByDescending(x => x.NgayDat).ToList();
            }
        }
    }
    [Inject] IJSRuntime JSRuntime { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("setTitle", $"Lịch sử mua hàng | Web bán thức ăn"); ;
    }
}

