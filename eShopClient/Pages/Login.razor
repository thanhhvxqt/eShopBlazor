@page "/login"
@using System.Web;
@using System.Net;
@using System.ComponentModel.DataAnnotations;
@using Newtonsoft.Json
@layout WebLayout;
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISyncSessionStorageService sessionStorage
@inject Microsoft.Extensions.Configuration.IConfiguration config;
@inject IJSRuntime JSRuntime
@inject IOnChangeService _OCSvc
@inject AuthenticationStateProvider auth
@inject IToastService _toastSvc;

@*<div class="col-md-4 offset-md-3 mt-5">
    <div class="card">
        <h4 class="card-header">Đăng nhập</h4>
        <div class="card-body">
            <div class="form-group">
                <input type="text" id="username" placeholder="User Name" @bind="@userName" class="form-control" />
            </div>
            <div class="form-group">
                <input type="password" placeholder="Password" @bind="@password" @onkeypress="Enter" class="form-control" />
            </div>
            <button class="ml-md-auto btn btn-primary" @onclick="CheckLogin">
                Login
            </button>
            @if (!string.IsNullOrEmpty(error))
            {
                <div class="alert alert-danger mt-3 mb-0">@((MarkupString)error)</div>
            }
        </div>
    </div>
</div>*@
<section class="account">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="account-contents" style="background: url('images/dfqbt5lg.png');background-size: 100px 100px; background-size: cover; ">
                    <div class="row">
                        <div class="col-xl-6 col-lg-6 col-md-6 col-sm-12">
                            <div class="account-thumb">
                                <h2>Đăng nhập ngay</h2>
                                <p>---------------------------</p>
                            </div>
                        </div>
                        <div class="col-xl-6 col-lg-6 col-md-6 col-sm-12">
                            <div class="account-content">
                                <div class="form">
                                    <div class="single-acc-field">
                                        <label for="username">Email</label>
                                        <input id="username" placeholder="Enter your email" @bind="@Email">
                                    </div>
                                    <div class="single-acc-field">
                                        <label for="password">Password</label>
                                        <input type="password" id="password" placeholder="Enter your password" @bind="@password" @onkeypress="Enter">
                                    </div>
                                    @*<div class="single-acc-field boxes">
                                    <input type="checkbox" id="checkbox">
                                    <label for="checkbox">Remember me</label>
                                    </div>*@
                                    <div class="single-acc-field">
                                        <button @onclick="CheckLogin">Login Account</button>
                                    </div>
                                    @*<a href="forget-password.html">Forget Password?</a>*@
                                    <a href="/register">Not Account Yet?</a>
                                </div>
                                @if (!string.IsNullOrEmpty(error))
                                {
                                    <div class="alert alert-danger mt-3 mb-0">@((MarkupString)error)</div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {

    private string error;

    public static string Email = "";
    public static string password = "";


    protected override void OnInitialized()
    {
         
        if (sessionStorage.GetItem<string>("Email") != null)
        {
            _toastSvc.ShowWarning("Bạn đã đăng nhập rồi !");
            NavigationManager.NavigateTo("/");
        }
       
    }

    private string Encode(string param)
    {
        return HttpUtility.UrlEncode(param);
    }

    public void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            if (password != "")
            {
                CheckLogin();
            }
        }
    }

    public async Task CheckLogin()
    {
        error = "";
        if (Email == "")
        {
            error = " - Bạn cần nhập email.";
        }
        if (password == "")
        {
            error += (error == "" ? "" : "<br/>") + " - Bạn cần nhập password.";
        }
        if (error == "")
        {

            var apiUrl = config.GetSection("API")["APIUrl"].ToString();
            using (var client = new HttpClient())
            {
                ViewWebLogin viewWebLogin = new ViewWebLogin() { Email = Email, Password = password };
                client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
                //client.DefaultRequestHeaders.Authorization =new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);
                StringContent content = new StringContent(JsonConvert.SerializeObject(viewWebLogin), System.Text.Encoding.UTF8, "application/json");
                HttpResponseMessage response = await client.PostAsync(apiUrl + "Token", content);
                if (response.StatusCode != HttpStatusCode.OK)
                {
                    error += (error == "" ? "" : "<br/>") + " - Lỗi khi gọi API.";
                    //xu ly loi
                    //return Content(response.ToString());
                }
                else
                {
                    string apiResponse = await response.Content.ReadAsStringAsync();

                    var viewToken = Newtonsoft.Json.JsonConvert.DeserializeObject<ViewToken>(apiResponse);

                    var accessToken = viewToken.Token;
                    sessionStorage.SetItem("KhachhangId", viewToken.KhachhangId);
                    sessionStorage.SetItem("Email", viewToken.Email);
                    sessionStorage.SetItem("UserName", Email);
                    //Console.WriteLine("email: " + viewToken.Email);
                    sessionStorage.SetItem("AccessToken", accessToken);
                    await auth.GetAuthenticationStateAsync();
                    //await JSRuntime.InvokeAsync<object>("refreshMenu", new {email= email});
                    //await JSRuntime.InvokeAsync<object>("CalledJSFunctionWithParameter", "Jignesh Trivedi");
                    _toastSvc.ShowSuccess($"Đăng nhập thành công {viewToken.Email}\n{viewToken.KhachhangId}");
                    _OCSvc.Invoke();
                    NavigationManager.NavigateTo("/");
                }
            }
        }
    }
}