@page "/"
@using Newtonsoft.Json
@using eShopShare.Models;
@inject Blazored.SessionStorage.ISyncSessionStorageService sessionStorage
@inject Microsoft.Extensions.Configuration.IConfiguration config;
@*@inject Blazored.SessionStorage.ISyncSessionStorageService sessionStorage*@
@layout WebLayout;
@inject IOnChangeService _OCSvc;
@inject IToastService _toastSvc;



@if (monAns == null)
{
    <LoadingIndicator></LoadingIndicator>
}
else
{
    <section class="featured-products bgcolor  section--padding">
        <div class="shortcode_wrapper">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <div class="shortcode_modules">
                            <div class="tab tab3">
                                <div class="item-navigation" style="text-align:left !important">
                                    <ul class="nav nav-tabs nav--tabs2">
                                        <li>
                                            <a href="#new-phim-index-tab" class="active" role="tab" data-toggle="tab">
                                                <span class="fa fa-burger-soda"></span> Thức ăn nổi bật
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="tab-content">
                                    <div class="tab-pane product-tab fade show active" id="new-phim-index-tab">
                                        <div class="row">
                                            @foreach (var item in monAns)
                                            {
                                                <div class="col-6 col-md-6 col-lg-3 col-rt15-3" style="padding-right:5px; padding-left:5px">
                                                    <div class="news" style="margin-bottom:30px">
                                                        <div class="news__thumbnail">
                                                            <a href="food-detail/@item.Id" title="@item.Name">

                                                                @{
                                                                    if (item.Photos.Any())
                                                                    {
                                                                        temp = imgUrl + item.Photos.FirstOrDefault().FileName;
                                                                    }
                                                                    else
                                                                    {
                                                                        temp = imgUrl + "/nophoto.png";
                                                                    }
                                                                    
                                                                }
                                                                <img src="@temp" alt="@item.Name" title="@item.Name" style="width:270px;height:290px">
                                                            </a>
                                                        </div>
                                                        <div class="news__content">
                                                            <a href="food-detail/@item.Id" class="news-title" title="@item.Name" style="margin-bottom:5px">
                                                                <h2 style="font-size:14px; line-height:20px">@item.Name</h2>
                                                            </a>
                                                            <h3 style="font-size:12px; color: var(--p); line-height:20px" title="@item.MoTa">@item.MoTa</h3>
                                                        </div>
                                                    </div>
                                                </div>
                                            }

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}

@code {
    private string name;
    public List<MonAn> monAns = null;
    protected string imgUrl = "";
    protected string temp = "";
    public string CARTKEY = "cart";
    //protected void OnInitialized()
    protected override async Task OnInitializedAsync()
    {
        //sessionStorage.SetItem("name", "John Smith");
        //var name = sessionStorage.GetItem<string>("name");
        temp = imgUrl + "/nophoto.png";
        //monAns = _monAnService.GetMonAnAll();
        Console.WriteLine("email: " + sessionStorage.GetItem<string>("Email"));
        var apiUrl = config.GetSection("API")["APIUrl"].ToString();
        imgUrl = config.GetSection("API")["ImgUrl"].ToString();

        monAns = new List<MonAn>();
        using (var client = new HttpClient())
        {
            //client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);
            client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
            client.BaseAddress = new Uri(apiUrl);
            using (var response = await client.GetAsync("MonAn"))
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                monAns = Newtonsoft.Json.JsonConvert.DeserializeObject<List<MonAn>>(apiResponse);
                monAns=monAns.OrderByDescending(x=>x.Views).Take(4).ToList();
            }
        }
    }
    public MonAn CheckFoodExist(int id)
    {
        return monAns.Where(u => u.Id == id).FirstOrDefault();
    }
    public void SetItemToCart(PostCartModel giohang)
    {
        sessionStorage.SetItem(CARTKEY, JsonConvert.SerializeObject(giohang));
    }
    public string GetItemInCart()
    {
        return sessionStorage.GetItem<string>(CARTKEY);
    }
    private void AddCart(int id)
    {
        //_cartSvc.AddToCart(id, monAns);
        //var cart = HttpContext.Session.GetString("cart");//get key cart
        var cart = GetItemInCart();//get key cart
        var monAn = CheckFoodExist(id);
        if (cart == null)
        {


            List<CartItem> listCart = new List<CartItem>()
            {
                    new CartItem
                    {
                        product = monAn,
                        quantity = 1,
                        Sotien= (double)monAn.Gia
                    }
            };

            PostCartModel giohang = new PostCartModel()
                {
                    cartItems = listCart,
                    TongTien = Tinhtien(listCart)
                };

            SetItemToCart(giohang);
            //HttpContext.Session.SetString("cart", JsonConvert.SerializeObject(listCart));
        }
        else
        {
            PostCartModel giohang = JsonConvert.DeserializeObject<PostCartModel>(cart);
            //List <ViewCart> dataCart = JsonConvert.DeserializeObject<List<ViewCart>>(cart);
            bool check = true;
            for (int i = 0; i < giohang.cartItems.Count; i++)
            {
                if (giohang.cartItems[i].product.Id == id)
                {
                    giohang.cartItems[i].quantity++;
                    giohang.cartItems[i].Sotien = (double)monAn.Gia * giohang.cartItems[i].quantity;
                    check = false;
                    break;
                }
            }

            if (check)
            {
                //var monAn = monAns.Where(u => u.MonAnID == id).FirstOrDefault();
                giohang.cartItems.Add(new CartItem
                    {
                        product = monAn,
                        quantity = 1,
                        Sotien = (double)monAn.Gia * 1
                    });
            }
            giohang.TongTien = Tinhtien(giohang.cartItems);

            SetItemToCart(giohang);
            //HttpContext.Session.SetString("cart", JsonConvert.SerializeObject(dataCart));
        }
        _toastSvc.ShowSuccess($"Thêm thành công");
        _OCSvc.Invoke();
        this.StateHasChanged();
    }

    private double Tinhtien(List<CartItem> listCart)
    {
        double tongtien = 0;
        if (listCart != null)
        {
            for (int i = 0; i < listCart.Count; i++)
            {
                tongtien += listCart[i].Sotien;
            }
        }
        return tongtien;
    }
}

