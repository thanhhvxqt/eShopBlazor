@using System.Threading
@using Newtonsoft.Json
@using System.Net
@inject Blazored.SessionStorage.ISyncSessionStorageService sessionStorage
@inject NavigationManager NavigationManager
@implements IDisposable
@inject IOnChangeService _OCSvc
@inject Microsoft.Extensions.Configuration.IConfiguration config;

   <div class="header_wishlist">
        @if (CheckLogin() != null && CheckLogin() != "")
        {
            <div class="mini_cart_wrapper">
                                         <a href="#"><img src="assets/img/user.png" alt=""></a>
                                        <span class="cart_quantity">2</span>
                                        <!--mini cart-->
                                         <div class="mini_cart">
                                            <div class="cart_item">
                                               <a class="nav-link text-dark" id="logout" @onclick="Logout">Đăng xuất</a>
                                            </div>
                                             <div class="cart_item">
                                               <a class="nav-link text-dark" id="logout" href="/history">Lịch sử</a>
                                            </div>
                                        </div>
                                        <!--mini cart end-->
                                    </div>
        }
        else
        {
             <div class="mini_cart_wrapper">
                                         <a href="#"><img src="assets/img/user.png" alt=""></a>
                                        <span class="cart_quantity">2</span>
                                        <!--mini cart-->
                                         <div class="mini_cart">
                                            <div class="cart_item">
                                               <a class="nav-link text-dark" id="register" href="/Register">Đăng ký</a>
                                            </div>
                                           <div class="cart_item">
                                               <a class="nav-link text-dark" id="login" href="/Login">Đăng nhập</a>
                                            </div>
                                        </div>
                                        <!--mini cart end-->
                                    </div>

        }
    </div>
   <div class="middel_right_info">
                                    <div class="mini_cart_wrapper">
                                        <a href="/Cart"><img src="assets/img/shopping-bag.png" alt=""></a>
                                        <span class="cart_quantity">@GetCountCart()</span>
                                        <!--mini cart-->
                                         <div class="mini_cart">
            @if (IsGioHangNotNull())
            {
            @foreach(var item in giohang.cartItems)
            {
                <div class="cart_item">
                                               <div class="cart_img">
                                                   @{
                                                if (item.product.Photos.Any())
                                                    {
                                                        temp = imgUrl + item.product.Photos.FirstOrDefault().FileName;
                                                    }
                                                    else
                                                    {
                                                        temp = imgUrl + "/nophoto.png";
                                                    }
                                                }
                                                   <a href="#"><img src="@temp" alt=""></a>
                                               </div>
                                                <div class="cart_info">
                                                    <a href="#">@item.product.Name</a>
                                                    <p>Qty: @item.quantity X <span> @item.Sotien </span></p>    
                                                </div>
                                                <div class="cart_remove">
                                                   <a href="javascript:return false;" @onclick="() => DeleteCart(item)" 
                                                onmouseup="delCart(@item.product.Id)"><i class="ion-android-close"></i></a>
                                                </div>
                                            </div>
            }
                <div class="mini_cart_table">
                                                <div class="cart_total mt-10">
                                                    <span>total:</span>
                                                    <span class="price">@giohang.TongTien</span>
                                                </div>
                                            </div>
                                            <div class="mini_cart_footer">
                                               <div class="cart_button">
                                                    <a href="/cart">View cart</a>
                                                </div>
                @if (@emailAddress != null && @emailAddress != "")
                {
                    <div class="cart_button">
                                                    <a @onclick="OrderCart">Checkout</a>
                                                </div>
                }
                

                </div>
            }
            else
            {
                <p>Giỏ hàng trống</p>
            }
                                       
                                            

                                            

                                        </div>
                                        <!--mini cart end-->
                                    </div>
                                </div>

@*<ul class="navbar-nav">
    <li class="nav-item">
        <a class="nav-link text-dark" id="cart" href="/Cart">
            @if (cart != null && cart != "")
            {
                <img id="imgCart" src="images/cartA.png" style="width:30px" />
            }
            else
            {
                <img id="imgCart" src="images/cart.png" style="width:30px" />
            }
        </a>
    </li>
</ul>*@
@*<ul class="navbar-nav" id="navLogin">

    @if (emailAddress != null && emailAddress != "")
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="information" href="/Info">Hello @emailAddress! | </a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="history" href="/History">Đơn hàng | </a>
        </li>
        <li class="nav-item">
            <button id="logout" type="button" @onclick="Logout" class="nav-link btn btn-link text-dark">Logout</button>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" href="/Register">Đăng ký</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" href="/Login">Đăng nhập</a>
        </li>
    }
</ul>*@

@code{
    string emailAddress;
    public PostCartModel giohang;
    protected string imgUrl = "";
    string cart;
    int cartItemCount = 0;
    protected string temp = "";
    protected override void OnInitialized()
    {
        CheckLogin();
        //cart = sessionStorage.GetItem<string>("cart");
        _OCSvc.OnChange += StateHasChanged;

        getGioHang();
        imgUrl = config.GetSection("API")["ImgUrl"].ToString();
    }
    public void Dispose()
    {
        _OCSvc.OnChange -= StateHasChanged;
    }
    public void getGioHang()
    {
        var cart = sessionStorage.GetItem<string>("cart");//get key cart

        if (cart == null)
        {
            giohang = new PostCartModel();
        }
        else
        {
            giohang = JsonConvert.DeserializeObject<PostCartModel>(cart);
        }
    }
    private async Task OrderCart()
    {
        var apiUrl = config.GetSection("API")["APIUrl"].ToString();
        imgUrl = config.GetSection("API")["ImgUrl"].ToString();
        var accessToken = sessionStorage.GetItem<string>("AccessToken");
        var khachhangId = sessionStorage.GetItem<string>("KhachhangId");

        giohang.khachHangId = khachhangId;

        using (var client = new HttpClient())
        {
            client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);
            StringContent content = new StringContent(JsonConvert.SerializeObject(giohang), System.Text.Encoding.UTF8, "application/json");
            client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
            HttpResponseMessage response = await client.PostAsync(apiUrl + "Cart", content);

            if (response.StatusCode != HttpStatusCode.OK)
            {
                //error += (error == "" ? "" : "<br/>") + " - Lỗi khi gọi API.";
                //xu ly loi
                //return Content(response.ToString());
            }
            else
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                if (apiResponse == "-1")
                {

                }
                else // luu thanh cong
                {
                    sessionStorage.RemoveItem("cart");
                    //await JSRuntime.InvokeAsync<object>("clearCart", "");
                    NavigationManager.NavigateTo("/history");
                }
            }
        }
        _OCSvc.Invoke();
    }
    private bool IsGioHangNotNull()
    {
        getGioHang();
        if (giohang.cartItems != null)
            return true;
        return false;
    }
    private void DeleteCart(CartItem item)
    {
        giohang.cartItems.Remove(item);
        giohang.TongTien = Tinhtien(giohang.cartItems);
        sessionStorage.SetItem("cart", JsonConvert.SerializeObject(giohang));
        _OCSvc.Invoke();
    }
    public string CheckLogin()
    {
        return emailAddress = sessionStorage.GetItem<string>("Email");
    }
    private double Tinhtien(List<CartItem> listCart)
    {
        double tongtien = 0;
        if (listCart != null)
        {
            for (int i = 0; i < listCart.Count; i++)
            {
                tongtien += listCart[i].Sotien;
            }
        }
        return tongtien;
    }
    public int GetCountCart()
    {
        cart = sessionStorage.GetItem<string>("cart");
        if(cart != null)
        {
            PostCartModel giohang = JsonConvert.DeserializeObject<PostCartModel>(cart);
            var temp = cartItemCount = giohang.cartItems.Count;
            return temp;
        }
        return 0;
    }
    protected void o()
    {
        emailAddress = sessionStorage.GetItem<string>("Email");
        cart = sessionStorage.GetItem<string>("cart");
    }

    protected void Logout()
    {
        sessionStorage.RemoveItem("AccessToken");
        sessionStorage.RemoveItem("Email");
        NavigationManager.NavigateTo("/");
    }
}
